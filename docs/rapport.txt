

En terme de design g√©n√©ral
- Mettre le num√©ro et le titre du chapitre et mettre une barre
- paginer les pages et tenir √† les respecter dans le Sommaire
- num√©roter aussi les pages avant l'introduction
- √† cot√© mettre le nom de l'application avec une petite icon √† c√¥t√©



Sommaire directement en profondeur


D√©dicace: Nous d√©dions ce projet √† tous ceux qui cherchent √† mieux organiser leur temps ou √† en avoir plus.

Remerciement: Remercier tout le monde, 
Ce travail ne saurait √™tre l'≈ìuvre d'une seule personne. Je tiens √† remercier tout particuli√®rement le professeur H√©noc SOUDE pour son pr√©cieux guide et ses conseils √©clair√©s. Votre partage de connaissances a √©t√© essentiel.






R√©sum√© du Projet

Ce projet a permis de d√©velopper un module de calendrier polyvalent, capable de g√©rer les √©v√©nements √† travers diverses vues telles que quotidienne, hebdomadaire et mensuelle. Il inclut des fonctionnalit√©s avanc√©es pour √©viter les chevauchements d‚Äô√©v√©nements et permet une navigation fluide entre les diff√©rentes dates et modes. Con√ßu sp√©cifiquement pour les d√©veloppeurs, ce module offre une architecture modulaire facilitant son int√©gration et sa personnalisation.

Project Summary

This project has developed a versatile calendar module capable of managing events across various views, such as daily, weekly, and monthly. It includes advanced features to prevent event overlaps and allows smooth navigation between different dates and modes. Designed specifically for developers, this module offers a modular architecture that facilitates integration and customization.


Introduction

- citation en haut
Le temps est comme un fleuve, il coule sans retour: Proverbe africain

Cr√©er l'intrigue
Pr√©senter de mani√®re captivante les besoins
Dire ce que nous pensons mettre en oeuvres pr√©cis√©ment dans tout cel√† en se focalisant sur ce qui est fait tou en focalisant sur ce qui est fait. 
Et profiter pour faire une petite projection sur les projetctions.
Annoncer succintement et brillamment le plan: dans un langage simple et naturel (un langage oral)


Aujourd'hui, nous faisons face √† un besoin croissant de solutions qui non seulement permettent de planifier les √©v√©nements, mais qui aussi optimisent la gestion des chevauchements et offrent une flexibilit√© dans la visualisation des diff√©rentes perspectives temporelles. Que ce soit pour un usage quotidien, hebdomadaire, mensuel ou annuel, le d√©fi est de cr√©er un calendrier qui facilement int√©grable sur des projets, pr√©cis et simple.

Dans ce projet, nous avons con√ßu PolyCalendar, un module de calendrier polyvalent, capable de r√©pondre √† ces exigences. Ce module offre des fonctionnalit√©s pour g√©rer efficacement les chevauchements d‚Äô√©v√©nements et permet une navigation fluide entre les diff√©rentes vues. Avec une interface utilisateur appropriable et une architecture modulaire, il est con√ßu pour faciliter l'int√©gration et la personnalisation par les d√©veloppeurs.

Nous commencerons par une analyse des solutions existantes et des lacunes identifi√©es. Ensuite, nous d√©taillerons l'architecture de notre module, en expliquant les diff√©rentes vues disponibles et la conception de l'interface utilisateur pour une navigation optimale. Ce module ouvre √©galement la voie √† des perspectives futures, offrant la possibilit√© d'ajouter des fonctionnalit√©s personnalis√©es pour r√©pondre √† des besoins vari√©s.




Etude de l'existant

Ils sont inombrabes ses outils de calendrier num√©rique qui nous permttent de visualiser nos √âv√©nements et t√¢ches sur plusieurs formats .
Pour mener une √©tude exhaustive des outils de calendrier num√©rique existants, nous les classerons en trois cat√©gories principales : Calendriers Personnels et Professionnels, Outils de Plannificatiion de Projets et d'√âv√©nements et les modules de calendriers pour D√©veloppeurs.


Calendriers Personnels et Professionnels
Ces calendriers, comme Google Calendar, Microsoft Outlook Calendar, Apple Calendar, et Zoho Calendar, sont con√ßus pour une utilisation individuelle ou en tr√®s petites √©quipes. Ils permettent de g√©rer des t√¢ches personnelles et professionnelles, de synchroniser les √©v√©nements sur plusieurs appareils, et d'int√©grer des rappels et des notifications. 

Par exemple, Google Calendar propose divers formats de visualisation des √©v√©nements, avec plusieurs options de personnalisation, int√©gr√©es aux services Google connexes.
Ces applications, bien que puissants pour des usages quotidiens, ils ne sont pas toujours con√ßus pour √™tre int√©gr√©s facilement dans des applications tierces. Certains de ces outils ne sont pas gratuits ou sont accessibles uniquement au sein des services de l'entreprise, ce qui complique leur adoption et leur int√©gration dans des projets personnalis√©s.


Mettre 2 captures: l'une pour google calendar et l'autre pour fantastic



Outils de Plannificatiion de Projets et d'√âv√©nements

Dans ce lot, on retrouve les plateformes comme Trello, Asana, et Monday.com qui int√®grent des vues de calendrier dans des plateformes de gestion de projets ou de planification d'√©v√©nements. 
Par exemple, Trello permet une gestion facile des t√¢ches et des √©ch√©ances avec une vue calendrier int√©gr√©e. Comme le groupe pr√©c√©dent, ils ne peuvent pas √™tre int√©gr√©s sur des applications tierces. Mais plus sp√©cifiquement, ils sont plus adapt√©s pour la gestion de projets d'√©quipe offrant ainsi le calendrier comme une vue secondaire.


Modules de Calendriers pour D√©veloppeurs
Contrairement aux outils pr√©c√©demment mentionn√©s, il existe des modules ou API permettant aux d√©veloppeurs d'int√©grer des fonctionnalit√©s de calendrier dans leurs applications web et mobiles. Parmi eux, on trouve FullCalendar, DHTMLX Scheduler, et Syncfusion Calendar, qui offrent plusieurs options de personnalisation et supportent divers frameworks JavaScript. FullCalendar, par exemple, est tr√®s adaptable et s'int√®gre facilement, offrant principalement trois vues. Cependant, les formats de visualisation d'√©v√©nements disponibles restent relativement limit√©s, et la libre structuration des donn√©es d'√©v√©nements ainsi que la personnalisation pour la gestion de calendrier sont encore des points faibles.

Mettre la capture de full calendar

Ces outils apportent une grande puissance pour les usages quotidiens, offrant des fonctionnalit√©s vari√©es et une int√©gration avec d'autres services. Cependant, ils manquent souvent de flexibilit√© et de fonctionnalit√©s avanc√©es n√©cessaires pour des int√©grations complexes. Aussi ne sont-ils pas toujours gratuits ou con√ßus pour √™tre int√©gr√©s dans des applications tierces, limitant ainsi leur adoption par les d√©veloppeurs.

Notre module de calendrier g√©n√©rique vise √† am√©liorer cette situation en offrant une solution flexible üìÜ, int√©grable üî´, et accessible ‚öô. Il permet aux d√©veloppeurs de structurer librement les donn√©es des √©v√©nements et de configurer les attributs selon leurs besoins. De plus, il ne se limite pas aux simples vues day, month, year, mais propose un ensemble complet de graphiques et de formats de visualisation d'√©v√©nements dans le temps. Cela permet une meilleure adaptation aux besoins vari√©s des utilisateurs et des d√©veloppeurs, offrant ainsi une extension significative des capacit√©s des outils actuels.




Architecture g√©n√©rale

La conception d'un module de calendrier g√©n√©rique n√©cessite une s√©paration claire entre la logique m√©tier et les interfaces utilisateur. Cette approche permet de maintenir un code propre, modulaire, et facilement testable. En adoptant une approche de d√©veloppement orient√©e par les tests (Test Driven Development), cette s√©paration devient encore plus cruciale pour garantir la robustesse et la fiabilit√© du module √† travers des tests unitaires exhaustifs.

Le calendrier agit comme une bo√Æte qui encapsule toute la logique et les interfaces du mode courant. Lorsqu'un utilisateur interagit avec le calendrier, par exemple en changeant de vue, la bo√Æte encapsule la transition, en passant les donn√©es pertinentes √† la nouvelle vue tout en conservant une exp√©rience utilisateur coh√©rente. Cette approche modulaire facilite √©galement l'ajout de nouvelles vues ou fonctionnalit√©s sans perturber les composants existants.


Architecture de la logique m√©tier
Logique : Cette couche g√®re toutes les op√©rations, algorithmes, et flux de donn√©es. Elle est responsable de la gestion des √©v√©nements, du calcul des positions des √©v√©nements, et de la logique d'affichage. En isolant cette logique, nous pouvons facilement effectuer des modifications ou des extensions sans affecter l'interface utilisateur. Par exemple, si nous devons ajouter une nouvelle fonctionnalit√©, comme la gestion des invitations d'√©v√©nements, cela peut √™tre fait uniquement dans la couche logique sans toucher √† la pr√©sentation.

Diagramme architectural
Nous avons √©labor√© un diagramme de classes pour illustrer l'architecture de notre module de calendrier g√©n√©rique. Ce diagramme pr√©sente les relations entre les diff√©rentes classes et leurs responsabilit√©s. La capture suivante, que nous nommerons "Architecture du code - Diagramme de classe", montre cette structure.

 <!-- Remplacer "image_path" par le chemin r√©el de l'image -->



Classe de t√™te : Calendar
La classe principale de notre module est Calendar. Elle g√®re les interactions entre les diff√©rentes vues (Day, Month, Year, Week). Elle maintient l'√©tat actuel du mode (via l'interface IMode) et la date courante. Elle a √©galement pour role de faire la correspondance prendre en compte la configuration des attributs du d√©veloppeur.


switchMode(IMode mode) : Permet de changer la vue courante (mode) du calendrier.
createCalendarFromMode() : Cr√©e et retourne une instance de la vue calendrier correspondant au mode actuel.

Relations avec les autres classes

Les autres classes d√©riv√©es, comme Day, Month et Year sont d√©di√©es pour visualisation  des √©v√©nements  en fonction du mode sp√©cifique.


Chaque classe de vue impl√©mente l'interface IMode et doit √™tre mise √† jour lorsque les √©v√©nements ou la date courante changent. Pour cela, la classe Calendar fournit une m√©thode de rafra√Æchissement, que nous appellerons update(). Cette m√©thode magique permet de mettre √† jour la date courante ou la donn√©e d'√©venements.


Classe Sp√©cifique : Day
La classe DayView est charg√©e de la visualisation des √©v√©nements pour une journ√©e sp√©cifique.

Algorithme de D√©termination des √âv√©nements du Jour
La premi√®re √©tape dans la gestion des √©v√©nements du jour consiste √† filtrer les √©v√©nements pertinents pour la date s√©lectionn√©e. La classe DayView identifie tous les √©v√©nements qui se produisent le jour courant et les pr√©pare pour l'affichage. Elle effectue une s√©lection pr√©cise pour s'assurer que seuls les √©v√©nements du jour en cours sont pris en compte.

Positionnement des √âv√©nements
Les √©v√©nements sont ensuite plac√©s dans une grille horaire abstraite qui divise la journ√©e en tranches de 15 minutes, soit une grille de 24 heures avec 4 tranches par heure. Les √©v√©nements sont positionn√©s en fonction de leur heure de d√©but et de leur dur√©e. Chaque √©v√©nement occupe une ou plusieurs cellules dans cette grille en fonction de sa dur√©e.

Pour √©viter des chevauchements visuels, la grille est con√ßue pour afficher un maximum de trois √©v√©nements par tranche horaire. Si plusieurs √©v√©nements se chevauchent √† la m√™me heure, la quatri√®me colonne de chaque ligne est r√©serv√©e pour un affichage suppl√©mentaire. Cette colonne "voir plus" permet de pr√©senter les √©v√©nements exc√©dentaires dans une liste d√©roulante accessible par survol ou clic, offrant ainsi une solution √©l√©gante pour g√©rer les chevauchements.





    Gestion des √âv√©nements dans la Vue Mensuelle
    La vue mensuelle du calendrier partage la m√™me logique de base que la vue quotidienne, mais avec des sp√©cificit√©s adapt√©es √† une √©chelle plus large. Le mois est divis√© en une grille de 7 jours par 6 semaines, permettant ainsi de couvrir tous les jours du mois, m√™me si le mois commence ou se termine en milieu de semaine.

    Dans cette vue, chaque jour est repr√©sent√© par une cellule dans la grille, o√π jusqu'√† trois √©v√©nements peuvent √™tre affich√©s directement. Pour les jours avec plus de trois √©v√©nements, un espace est r√©serv√© pour indiquer qu'il y a des √©v√©nements suppl√©mentaires √† consulter. Un bouton "voir plus" est pr√©vu pour donner plus de d√©tails sur les √©v√©nements de cette journ√©e.

    Les √©v√©nements qui s'√©tendent sur plusieurs jours sont √©galement pris en compte dans la vue mensuelle. Ils sont affich√©s en tant que blocs couvrant les jours concern√©s, assurant ainsi que la dur√©e des √©v√©nements est bien repr√©sent√©e √† travers le mois.



Architecture des interfaces Calendrier
Les interfaces sont compos√©es principalement de trois √©l√©ments : la barre d'action, la vue globale du calendrier, et les composants sp√©cifiques √† chaque mode de vue.


Barre d'Action
La barre d'action, qui agit comme la barre de navigation (navbar) du calendrier, est divis√©e en trois sections principales :

1.Section de la Date Courante :
Cette section permet de naviguer entre les dates. Selon le mode actuel (Day, Week, Month, Year), les boutons de navigation permettent de se d√©placer vers les dates pr√©c√©dentes ou suivantes. Par exemple, en mode jour (Day), on peut passer au jour pr√©c√©dent ou suivant, tandis qu'en mode mois (Month), on peut naviguer vers le mois pr√©c√©dent ou suivant. Un bouton sp√©cifique permet √©galement de revenir directement √† la date actuelle, qu'il s'agisse du jour, du mois ou de l'ann√©e.

2.Section de Mode :
Cette partie affiche les quatre modes de vue disponibles : Day, Week, Month, Year. Un clic sur l'un de ces modes d√©clenche un changement de mode, mettant √† jour l'affichage pour refl√©ter le mode s√©lectionn√©. La m√©thode appropri√©e de la classe Calendar est appel√©e pour effectuer ce changement, et les grilles de pr√©sentation sont mises √† jour en cons√©quence.


3.Section de Recherche :
La barre d'action inclut √©galement une fonctionnalit√© de recherche rapide d'√©v√©nements par titre. Cette recherche est dynamique et filtre automatiquement les √©v√©nements en fonction des termes de recherche saisis par l'utilisateur.


Vue Globale du Calendrier
La vue globale, ou CalendarView, est responsable de l'instanciation du calendrier et de la gestion des vues sp√©cifiques selon le mode actuel. Elle int√®gre les vues suivantes :

DayView : Affiche les √©v√©nements pour un jour sp√©cifique.
WeekView : Pr√©sente les √©v√©nements pour une semaine enti√®re.
MonthView : Montre les √©v√©nements pour un mois.
YearView : Affiche les √©v√©nements pour une ann√©e.


Pour chacune de ces vues, une grille de fond est dessin√©e pour structurer l'affichage des jours, heures, ou mois. Une seconde grille, transparente mais de la m√™me taille, est superpos√©e pour positionner les √©v√©nements. La m√©thode buildEventStyle est utilis√©e pour d√©finir le style visuel des √©v√©nements sur cette grille transparente, garantissant ainsi une pr√©sentation claire et coh√©rente.


Composants Sp√©cifiques √† Chaque Vue
Chaque vue (Day, Week, Month, Year) dispose de composants sp√©cifiques pour g√©rer ses particularit√©s :

DayView : Utilise un composant HourList pour afficher les heures de la journ√©e et pour aider √† la disposition des √©v√©nements dans la grille horaire.

MonthView : Emploie un composant pour afficher les jours de chaque semaine, permettant une visualisation coh√©rente du mois.




Langages Utilis√©s et M√©thodologie
Le module de calendrier a √©t√© impl√©ment√© en utilisant JavaScript avec Mithril pour g√©rer la logique m√©tier et les interactions utilisateur. Le style et la pr√©sentation ont √©t√© r√©alis√©s avec CSS pour assurer une apparence coh√©rente et attrayante.

Le d√©veloppement a √©t√© guid√© par une approche de Test Driven Development (TDD). Cette m√©thodologie nous permet de mettre des tests unitaires avant l‚Äô√©criture du code, assurant ainsi un code bien structur√©.


R√©sultats

R√©sum√© des Objectifs Atteints
Le module de calendrier a √©t√© d√©velopp√© avec succ√®s pour g√©rer les √©v√©nements dans les vues quotidienne, hebdomadaire et mensuelle. Il filtre et positionne les √©v√©nements dans une grille horaire pr√©cise, tout en g√©rant efficacement les chevauchements. La barre d‚Äôaction facilite la navigation, le changement de mode, et la recherche des √©v√©nements. L'architecture modulaire assure une s√©paration claire entre la logique m√©tier et l'interface utilisateur, permettant une int√©gration ais√©e par d'autres d√©veloppeurs.


D√©monstration et Exemples


Cas d‚ÄôUtilisation
Webinaires et Conf√©rences
Pour les webinaires, le module de calendrier offre une vue mensuelle pour planifier les √©v√©nements et une vue horaire pour g√©rer les cr√©neaux sans chevauchement. La recherche dynamique aide √† trouver rapidement les sessions, et la barre d‚Äôaction facilite la navigation entre les dates.

Applications de Gestion de Projets
Dans les outils de gestion de projets, le calendrier aide √† organiser les t√¢ches avec des vues quotidienne, hebdomadaire et mensuelle. Il permet de suivre les √©ch√©ances et d'√©viter les conflits de calendrier, garantissant une gestion efficace des projets.

Gestion Universitaire
Pour les plateformes universitaires, le calendrier organise les cours, examens et √©v√©nements acad√©miques. La vue quotidienne et hebdomadaire aide √† suivre les horaires, tandis que la vue mensuelle permet de planifier les sessions de rattrapage et autres √©v√©nements importants.




Discussion && Perspectives

√âlargissement des Vues
Pour enrichir le module de calendrier, il serait b√©n√©fique d'ajouter des vues suppl√©mentaires telles que la vue ressource, qui permet de visualiser la disponibilit√© des ressources, ou des vues personnalis√©es comme le Kanban pour g√©rer des t√¢ches de mani√®re visuelle. Ces ajouts pourraient am√©liorer la flexibilit√© et l'adaptabilit√© du calendrier √† divers besoins.

Options de Statut et Analyse
Int√©grer des options de statut pour les t√¢ches permettrait de suivre l'avancement des projets et d'ajouter un syst√®me intelligent d'analyse de performance. Cela offrirait des insights en temps r√©el sur la productivit√© des utilisateurs, facilitant ainsi une meilleure gestion des t√¢ches et des objectifs.

Extension de la Communaut√© de D√©veloppement
Pour maximiser l'adoption, il est essentiel d'√©largir la communaut√© de d√©veloppement et de rendre le module compatible avec plusieurs frameworks. Cela permettrait √† un plus grand nombre de d√©veloppeurs d'int√©grer et de contribuer au module, enrichissant ainsi ses fonctionnalit√©s et sa port√©e.

Personnalisation de la Gestion des Chevauchements
Permettre une personnalisation accrue de la gestion des chevauchements offrira plus de flexibilit√© aux utilisateurs pour adapter l'affichage des √©v√©nements √† leurs pr√©f√©rences sp√©cifiques. Cela pourrait inclure des options pour d√©finir le nombre d'√©v√©nements visibles par tranche horaire ou la mani√®re dont les √©v√©nements suppl√©mentaires sont affich√©s.

Responsivit√© et Personnalisation Mobile
Assurer la compatibilit√© du calendrier avec les appareils mobiles est crucial pour offrir une exp√©rience utilisateur fluide. La personnalisation de l'affichage sur mobile, incluant la gestion des diff√©rentes vues en fonction de la taille de l'√©cran, garantirait que le calendrier reste fonctionnel et intuitif sur toutes les plateformes.



Conclusion
UnifiedCalendar offre une solution la gestion des √©v√©nements √† travers diff√©rentes vues, telles que quotidienne, hebdomadaire et mensuelle. Sa conception modulaire, qui s√©pare la logique m√©tier des interfaces utilisateur, permet non seulement une int√©gration ais√©e dans divers projets, mais aussi une personnalisation adapt√©e aux besoins sp√©cifiques des utilisateurs. Il vient avec des fonctionnalit√©s de filtrage, de gestion des chevauchements, et de navigation fluide.
Envisager des extensions comme des vues personnalis√©es, des options de statut, et une meilleure compatibilit√© mobile pourrait encore enrichir ses capacit√©s et r√©pondre √† un √©ventail plus large de besoins.

WebBiographie pour la r√©alisation du projet



Enlever langages utilis√©s et m√©thodologie
Enlever les num√©rotations

Succ√®s

R√©sultats
 - Parler des langages
 - Pr√©senter les vues



Enlever Discussions et perspectives 

Mettre Conclusions et Perspecctives